# mcp/logic/sys_templates.py

from typing import Iterable
from  ...functions.sys.model import DigestSummary, UnitReport

def _badge(level: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç emoji-–∑–Ω–∞—á–æ–∫ –¥–ª—è —É—Ä–æ–≤–Ω—è —Å–æ—Å—Ç–æ—è–Ω–∏—è."""
    return {"OK": "‚úÖ", "WARN": "‚ö†Ô∏è", "FAIL": "üõë"}.get(level, "‚ùî")

def _format_report(r: UnitReport) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –ø–æ –æ–¥–Ω–æ–º—É systemd-—é–Ω–∏—Ç—É."""
    head = f"{_badge(r.level)} *{r.unit}* ‚Äî {r.level}"
    details = [f"Status: `{r.status.active}`, Restarts: `{r.status.restarts}`"]

    if r.issues:
        issues_txt = ", ".join(f"`{i.category}`" for i in r.issues)
        details.append(f"Issues detected: {issues_txt}")

    if r.samples:
        samples = "\n".join(f"  ‚Ä¢ `{ln[:160]}`" for ln in r.samples[:3])
        details.append("Log samples:\n" + samples)

    body = "\n".join(details)
    return f"{head}\n{body}"

def render_digest(d: DigestSummary) -> str:
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –∏–∑ –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤."""
    lines = [f"üñ•Ô∏è *System Status Digest* (overall: {d.overall} {_badge(d.overall)})", ""]
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ—Ç–æ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    ordered_reports: Iterable[UnitReport] = sorted(d.reports, key=lambda x: {"FAIL": 0, "WARN": 1, "OK": 2}[x.level])
    
    for r in ordered_reports:
        lines.append(_format_report(r))
        lines.append("") # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        
    return "\n".join(lines).strip()